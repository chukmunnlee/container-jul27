{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/main.component.html","./src/app/components/main.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCZA,iJAA2B,KAC1B,uIAAiB,KAChB,sHAAI,6HAAM,+FAAkB,MAI9B,8lBAAe;;;;;;;;;;;;;;;;ACCf;AAAA;AAAO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAA4D;WAK3C,GAAG,EAAE,CAAC,oOAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,sBAAa,CAAC;AAHjF,MAAM,MAAM,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,QAAQ,EACd,YAAY,IAAkE;KAC/E;CACD;AAaM,MAAM,SAAS;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGC1B1B,qHAAG,wFAAW,MACd,uIAAiB,KAChB,uIAAiB,KAChB,6IAAuB,KACtB;;;gZAAuE,oFAEvE,2BAFkD,yBAAoB,EAAtE,YAAuE,EAArB,SAAoB,2BAAtE,oMAAuE;;;;;;;;;;;;;;;;ACG1E;AAAA;AAAO,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;ACdD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"row mt-3 mb-1\">\n\t<div class=\"col\">\n\t\t<h2><code>app.component.html</code></h2>\n\t</div>\n</div>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './components/main.component';\n\nconst ROUTES: Routes = [\n\t{ path: '', component: MainComponent },\n\t{ path: 'kboard', \n\t\t\tloadChildren: () => import('./kboard/kboard.module').then(m => m.KboardModule)\n\t}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent, MainComponent,\n  ],\n  imports: [\n\t\tBrowserModule, BrowserAnimationsModule,\n\t\tRouterModule.forRoot(ROUTES)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<p>main works!</p>\n<div class=\"row\">\n\t<div class=\"col\">\n\t\t<ul class=\"list-group\">\n\t\t\t<a class=\"list-group-item list-group-item-action\" routerLink=\"/kboard\">\n\t\t\t\tKboard\n\t\t\t</a>\n\t\t</ul>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}